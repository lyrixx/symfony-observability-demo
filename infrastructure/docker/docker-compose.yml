version: '3.7'

volumes:
    clickhouse-data: {}
    elasticsearch-data: {}
    grafana-data: {}
    loki-data: {}
    postgres-data: {}
    vector-data: {}

x-redash-service: &redash-service
    image: redash/redash:8.0.0.b32245
    depends_on:
        - redis
    env_file: ./redash.env


services:
    router:
        build: services/router
        volumes:
            - "/var/run/docker.sock:/var/run/docker.sock"
            - "./services/router/certs:/etc/ssl/certs"
        network_mode: host

    frontend:
        build:
            context: services/php
            target: frontend
        depends_on:
            - postgres
        volumes:
            - "../..:/var/www:cached"
        environment:
            - "PHP_VERSION=${PHP_VERSION}"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.rule=Host(${PROJECT_DOMAINS})"
            - "traefik.http.routers.${PROJECT_NAME}-frontend.tls=true"

    postgres:
        image: postgres:16
        environment:
            - POSTGRES_USER=app
            - POSTGRES_PASSWORD=app
            # Create the redash database, the symfony one will be created by castor+symfony
            - POSTGRES_DB=redash
        volumes:
            - postgres-data:/var/lib/postgresql/data

    vector:
        image: timberio/vector:0.36.0-debian
        volumes:
            - ./services/vector/vector.yaml:/etc/vector/vector.yaml
            - vector-data:/var/lib/vector
        expose:
          - "8686"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-vector.rule=Host(`vector.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-vector.tls=true"

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.17.18
        volumes:
            - ./services/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
            - elasticsearch-data:/usr/share/elasticsearch/data
        ulimits:
            memlock:
                soft: -1
                hard: -1
        environment:
            # https://www.elastic.co/guide/en/elasticsearch/reference/7.17/docker.html#docker-compose-file
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-elasticsearch.rule=Host(`elasticsearch.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-elasticsearch.tls=true"

    kibana:
        image: 'docker.elastic.co/kibana/kibana:7.17.18'
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-kibana.rule=Host(`kibana.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-kibana.tls=true"

    loki:
        image: grafana/loki:2.9.4
        volumes:
            - loki-data:/loki
        command: -config.file=/etc/loki/local-config.yaml
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-loki.rule=Host(`loki.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-loki.tls=true"

    grafana:
        image: grafana/grafana:latest
        volumes:
            - grafana-data:/var/lib/grafana
        environment:
            - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
            - GF_INSTALL_PLUGINS=grafana-clickhouse-datasource
        entrypoint:
            - sh
            - -euc
            - |
                mkdir -p /etc/grafana/provisioning/datasources
                cat <<EOF > /etc/grafana/provisioning/datasources/loki.yaml
                apiVersion: 1
                datasources:
                  - name: Loki
                    type: loki
                    access: proxy
                    orgId: 1
                    url: http://loki:3100
                    basicAuth: false
                    isDefault: true
                    version: 1
                    editable: false
                  - name: ClickHouse
                    type: grafana-clickhouse-datasource
                    access: proxy
                    orgId: 1
                    isDefault: false
                    jsonData:
                      host: clickhouse
                      port: 9000
                      defaultDatabase: app
                      username: app
                      defaultDatasource: true
                    secureJsonData:
                      password: app
                    version: 1
                    editable: false
                EOF
                /run.sh
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-grafana.rule=Host(`grafana.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-grafana.tls=true"

    clickhouse:
        image: clickhouse/clickhouse-server
        user: "101:101"
        environment:
            CLICKHOUSE_DB: app
            CLICKHOUSE_USER: app
            CLICKHOUSE_PASSWORD: app
            CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT: 1
        volumes:
            - "clickhouse-data:/var/lib/clickhouse"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-clickhouse.rule=Host(`clickhouse.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-clickhouse.tls=true"

    redash:
        <<: *redash-service
        environment:
            REDASH_WEB_WORKERS: 4
        command: server
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.${PROJECT_NAME}-redash.rule=Host(`redash.${PROJECT_ROOT_DOMAIN}`)"
            - "traefik.http.routers.${PROJECT_NAME}-redash.tls=true"
    redash-scheduler:
        <<: *redash-service
        environment:
            QUEUES: "celery"
            WORKERS_COUNT: 1
        command: scheduler
    redash-scheduled_worker:
        <<: *redash-service
        environment:
            QUEUES: "scheduled_queries,schemas"
            WORKERS_COUNT: 1
        command: worker
    redash-adhoc_worker:
        <<: *redash-service
        environment:
            QUEUES: "queries"
            WORKERS_COUNT: 2
        command: worker
    redis:
        image: redis:7-alpine
